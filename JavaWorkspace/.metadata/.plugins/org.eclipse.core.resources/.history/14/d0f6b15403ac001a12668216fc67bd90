package Trees;
class BSTNode{
	int data;
	BSTNode left;
	BSTNode right;
	BSTNode(int data)
	{
		this.data=data;
		this.left=null;
		this.right=null;
	}
}
class BST
{
	BSTNode insert(BSTNode root, int data)
	{
		if(root==null)
		{
			return new BSTNode(data);
		}
		if(data<=root.data)
		{
			root.left = insert(root.left,data);
		}
		else {
			root.right = insert(root.right,data);
		}
		return root;
	}
	boolean search(BSTNode root, int data)
	{	
		if(root==null) return false;
		if(root.data==data) return true;
 		if(data<=root.data)
		{
			return search(root.left,data);
		}
		else{
			return search(root.right,data);
			}
	}
}
public class BSTApp {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		BST bst = new BST();
		BSTNode root = null;
		System.out.println(bst.search(root, 8));
		root = bst.insert(root, 8);//update root after insertion
		System.out.println(bst.search(root, 8));
	}

}
